(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{435:function(s,t,e){"use strict";e.r(t);var n=e(6),a=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"分包策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分包策略"}},[s._v("#")]),s._v(" 分包策略")]),s._v(" "),t("p",[s._v("Webpack 默认会将尽可能多的模块代码打包在一起，优点是能减少最终页面的 HTTP 请求数，但缺点也很明显：")]),s._v(" "),t("ol",[t("li",[s._v("页面初始代码包过大，影响首屏渲染性能；")]),s._v(" "),t("li",[s._v("无法有效应用浏览器缓存，特别对于 NPM 包这类变动较少的代码，业务代码哪怕改了一行都会导致 NPM 包缓存失效。")])]),s._v(" "),t("p",[s._v("为此，Webpack 提供了 "),t("code",[s._v("SplitChunksPlugin")]),s._v(" 插件，专门用于根据产物包的体积、引用次数等做分包优化，规避上述问题，特别适合生产环境使用。")]),s._v(" "),t("h2",{attrs:{id:"理解-chunk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#理解-chunk"}},[s._v("#")]),s._v(" 理解 chunk")]),s._v(" "),t("p",[s._v("Chunk 是 Webpack 内部一个非常重要的底层设计，用于组织、管理、优化最终产物，在构建流程进入生成(Seal)阶段后：")]),s._v(" "),t("ol",[t("li",[s._v("Webpack 首先根据 entry 配置创建若干 Chunk 对象；")]),s._v(" "),t("li",[s._v("遍历构建(Make)阶段找到的所有 Module 对象，同一 Entry 下的模块分配到 Entry 对应的 Chunk 中；")]),s._v(" "),t("li",[s._v("遇到异步模块则创建新的 Chunk 对象，并将异步模块放入该 Chunk；")]),s._v(" "),t("li",[s._v("分配完毕后，根据 SplitChunksPlugin 的启发式算法进一步对这些 Chunk 执行 "),t("strong",[s._v("裁剪、拆分、合并、代码调优")]),s._v("，最终调整成运行性能(可能)更优的形态；")]),s._v(" "),t("li",[s._v("最后，将这些 Chunk 一个个输出成最终的产物(Asset)文件，编译工作到此结束。")])]),s._v(" "),t("p",[s._v("Chunk 在构建流程中起着承上启下的关键作用 —— 一方面作为 Module 容器，根据一系列默认 "),t("strong",[s._v("分包策略")]),s._v(" 决定哪些模块应该合并在一起打包；另一方面根据 splitChunks 设定的 "),t("strong",[s._v("策略")]),s._v(" 优化分包，决定最终输出多少产物文件。")]),s._v(" "),t("p",[t("strong",[s._v("Chunk 分包结果的好坏直接影响了最终应用性能")]),s._v("，Webpack 默认会将以下三种模块做分包处理：")]),s._v(" "),t("ul",[t("li",[s._v("Initial Chunk："),t("code",[s._v("entry")]),s._v(" 模块及相应子模块打包成 Initial Chunk；")]),s._v(" "),t("li",[s._v("Async Chunk：通过 "),t("code",[s._v("import('./xx')")]),s._v(" 等语句导入的异步模块及相应子模块组成的 Async Chunk；")]),s._v(" "),t("li",[s._v("Runtime Chunk：运行时代码抽离成 Runtime Chunk，可通过 "),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwebpack.js.org%2Fconfiguration%2Fentry-context%2F%23dependencies",target:"_blank",rel:"noopener noreferrer"}},[s._v("entry.runtime"),t("OutboundLink")],1),s._v(" 配置项实现。")])]),s._v(" "),t("p",[t("code",[s._v("Initial Chunk")]),s._v(" 与 "),t("code",[s._v("Async Chunk")]),s._v(" 这种略显粗暴的规则会带来两个明显问题：")]),s._v(" "),t("p",[t("strong",[s._v("模块重复打包")]),s._v("：假如多个 Chunk 同时依赖同一个 Module，那么这个 Module 会被不受限制地重复打包进这些 Chunk")]),s._v(" "),t("p",[t("strong",[s._v("资源冗余 & 低效缓存")]),s._v("：Webpack 会将 Entry 模块、异步模块所有代码都打进同一个单独的包，这在小型项目通常不会有明显的性能问题，但伴随着项目的推进，包体积逐步增长可能会导致应用的响应耗时越来越长。归根结底这种将所有资源打包成一个文件的方式存在两个弊端：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("资源冗余")]),s._v("：客户端必须等待整个应用的代码包都加载完毕才能启动运行，但可能用户当下访问的内容只需要使用其中一部分代码")]),s._v(" "),t("li",[t("strong",[s._v("缓存失效")]),s._v("：将所有资源达成一个包后，所有改动 —— 即使只是修改了一个字符，客户端都需要重新下载整个代码包，缓存命中率极低")])]),s._v(" "),t("p",[s._v("这两个问题都可以通过更科学的分包策略解决，例如：")]),s._v(" "),t("ul",[t("li",[s._v("将被多个 Chunk 依赖的包分离成独立 Chunk，防止资源重复；")]),s._v(" "),t("li",[s._v("node_modules 中的资源通常变动较少，可以抽成一个独立的包，业务代码的频繁变动不会导致这部分第三方库资源缓存失效，被无意义地重复加载。")])]),s._v(" "),t("h2",{attrs:{id:"splitchunksplugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#splitchunksplugin"}},[s._v("#")]),s._v(" SplitChunksPlugin")]),s._v(" "),t("p",[t("code",[s._v("SplitChunksPlugin")]),s._v(" 是 Webpack 4 之后内置实现的最新分包方案，与 Webpack3 时代的 "),t("code",[s._v("CommonsChunkPlugin")]),s._v(" 相比，它能够基于一些更灵活、合理的启发式规则将 Module 编排进不同的 Chunk，最终构建出性能更佳，缓存更友好的应用产物。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("SplitChunksPlugin 支持根据 Module 路径、Module 被引用次数、Chunk 大小、Chunk 请求数等决定是否对 Chunk 做进一步拆解，这些决策都可以通过 "),t("code",[s._v("optimization.splitChunks")]),s._v(" 相应配置项调整定制，基于这些能力我们可以实现：")]),s._v(" "),t("ul",[t("li",[s._v("单独打包某些特定路径的内容，例如 "),t("code",[s._v("node_modules")]),s._v(" 打包为 "),t("code",[s._v("vendors")]),s._v("；")]),s._v(" "),t("li",[s._v("单独打包使用频率较高的文件；")])])]),s._v(" "),t("li",[t("p",[s._v("SplitChunksPlugin 还提供了 "),t("code",[s._v("optimization.splitChunks.cacheGroup")]),s._v(" 概念，用于对不同特点的资源做分组处理，并为这些分组设置更有针对性的分包规则；")])]),s._v(" "),t("li",[t("p",[s._v("SplitChunksPlugin 还内置了 default 与 defaultVendors 两个 cacheGroup，提供一些开箱即用的分包特性：")]),s._v(" "),t("ul",[t("li",[s._v("node_modules 资源会命中 defaultVendors 规则，并被单独打包；")]),s._v(" "),t("li",[s._v("只有包体超过 20kb 的 Chunk 才会被单独打包；")]),s._v(" "),t("li",[s._v("加载 Async Chunk 所需请求数不得超过 30；")]),s._v(" "),t("li",[s._v("加载 Initial Chunk 所需请求数不得超过 30。")])])])]),s._v(" "),t("p",[s._v("由于 Webpack4 开始已经内置支持 SplitChunksPlugin ，我们不需要额外安装依赖，直接修改 "),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwebpack.js.org%2Fconfiguration%2Foptimization%2F%23optimizationsplitchunks",target:"_blank",rel:"noopener noreferrer"}},[s._v("optimization.splitChunks"),t("OutboundLink")],1),s._v(" 配置项即可实现自定义的分包策略：")]),s._v(" "),t("p",[s._v("splitChunks 主要有两种类型的配置：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("minChunks/minSize/maxInitialRequest")]),s._v(" 等分包条件，满足这些条件的模块都会被执行分包；")]),s._v(" "),t("li",[t("code",[s._v("cacheGroup")]),s._v(" ：用于为特定资源声明特定分包条件，例如可以为 "),t("code",[s._v("node_modules")]),s._v(" 包设定更宽松的分包条件。")])]),s._v(" "),t("h3",{attrs:{id:"设置分包范围"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置分包范围"}},[s._v("#")]),s._v(" 设置分包范围")]),s._v(" "),t("p",[t("code",[s._v("SplitChunksPlugin")]),s._v(" 默认情况下只对 "),t("code",[s._v("Async Chunk")]),s._v(" 生效，我们可以通过 "),t("code",[s._v("splitChunks.chunks")]),s._v(" 调整作用范围，该配置项支持如下值：")]),s._v(" "),t("ul",[t("li",[s._v("字符串 "),t("code",[s._v("'all'")]),s._v(" ：对 "),t("code",[s._v("Initial Chunk")]),s._v(" 与 "),t("code",[s._v("Async Chunk")]),s._v(" 都生效，建议优先使用该值；")]),s._v(" "),t("li",[s._v("字符串 "),t("code",[s._v("'initial'")]),s._v(" ：只对 "),t("code",[s._v("Initial Chunk")]),s._v(" 生效；")]),s._v(" "),t("li",[s._v("字符串 "),t("code",[s._v("'async'")]),s._v(" ：只对 "),t("code",[s._v("Async Chunk")]),s._v(" 生效；")]),s._v(" "),t("li",[s._v("函数 "),t("code",[s._v("(chunk) => boolean")]),s._v(" ：该函数返回 true 时生效；")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("optimization")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("splitChunks")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("chunks")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'all'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("设置为 "),t("code",[s._v("all")]),s._v(" 效果最佳，此时 Initial Chunk、Async Chunk 都会被 "),t("code",[s._v("SplitChunksPlugin")]),s._v(" 插件优化。")]),s._v(" "),t("h3",{attrs:{id:"根据-module-使用频率分包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据-module-使用频率分包"}},[s._v("#")]),s._v(" 根据 Module 使用频率分包")]),s._v(" "),t("p",[t("code",[s._v("SplitChunksPlugin")]),s._v(" 支持按 Module 被 Chunk 引用的次数决定是否分包，借助这种能力我们可以轻易将那些被频繁使用的模块打包成独立文件，减少代码重复。只需用 "),t("code",[s._v("splitChunks.minChunks")]),s._v(" 配置项设定最小引用次数。这里“被 Chunk 引用次数”并不直接等价于被 import 的次数，而是取决于上游调用者是否被视作 "),t("code",[s._v("Initial Chunk")]),s._v(" 或 "),t("code",[s._v("Async Chunk")]),s._v(" 处理。")]),s._v(" "),t("h3",{attrs:{id:"限制分包数量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#限制分包数量"}},[s._v("#")]),s._v(" 限制分包数量")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("minChunks")]),s._v(" 基础上，为防止最终产物文件数量过多导致 HTTP 网络请求数剧增，反而降低应用性能，Webpack 还提供了 "),t("code",[s._v("maxInitialRequest/maxAsyncRequest")]),s._v(" 配置项，用于限制分包数量：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("maxInitialRequest")]),s._v("：用于设置 "),t("code",[s._v("Initial Chunk")]),s._v(" 最大并行请求数；")]),s._v(" "),t("li",[t("code",[s._v("maxAsyncRequests")]),s._v("：用于设置 "),t("code",[s._v("Async Chunk")]),s._v(" 最大并行请求数。")])]),s._v(" "),t("p",[s._v("这里所说的“请求数”，是指加载一个 Chunk 时所需要加载的所有分包数。例如对于一个 "),t("code",[s._v("Chunk A")]),s._v("，如果根据分包规则(如模块引用次数、第三方包)分离出了若干子 "),t("code",[s._v("Chunk A[¡]")]),s._v("，那么加载 A 时，浏览器需要同时加载所有的 "),t("code",[s._v("A[¡]")]),s._v("，此时并行请求数等于 "),t("code",[s._v("¡")]),s._v(" 个分包加 "),t("code",[s._v("A")]),s._v(" 主包，即 "),t("code",[s._v("¡+1")]),s._v("。")]),s._v(" "),t("p",[s._v("并行请求数关键逻辑总结如下：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Initial Chunk")]),s._v(" 本身算一个请求；")]),s._v(" "),t("li",[t("code",[s._v("Async Chunk")]),s._v(" 不算并行请求；")]),s._v(" "),t("li",[s._v("通过 "),t("code",[s._v("runtimeChunk")]),s._v(" 拆分出的 runtime 不算并行请求；")]),s._v(" "),t("li",[s._v("如果同时有两个 Chunk 满足拆分规则，但是 "),t("code",[s._v("maxInitialRequests")]),s._v("(或 "),t("code",[s._v("maxAsyncRequest")]),s._v(") 的值只能允许再拆分一个模块，那么体积更大的模块会被优先拆解。")])]),s._v(" "),t("h3",{attrs:{id:"限制分包体积"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#限制分包体积"}},[s._v("#")]),s._v(" 限制分包体积")]),s._v(" "),t("p",[s._v("除上面介绍的 "),t("code",[s._v("minChunks")]),s._v(" —— 模块被引用次数，以及 "),t("code",[s._v("maxXXXRequest")]),s._v(' —— 包数量，这两个条件外，Webpack 还提供了一系列与 Chunk 大小有关的分包判定规则，借助这些规则我们可以实现当包体过小时直接取消分包 —— 防止产物过"碎"；当包体过大时尝试对 Chunk 再做拆解 —— 避免单个 Chunk 过大。')]),s._v(" "),t("p",[s._v("这一规则相关的配置项有：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("minSize")]),s._v("： 超过这个尺寸的 Chunk 才会正式被分包；")]),s._v(" "),t("li",[t("code",[s._v("maxSize")]),s._v("： 超过这个尺寸的 Chunk 会尝试进一步拆分出更小的 Chunk；")]),s._v(" "),t("li",[t("code",[s._v("maxAsyncSize")]),s._v("： 与 "),t("code",[s._v("maxSize")]),s._v(" 功能类似，但只对异步引入的模块生效；")]),s._v(" "),t("li",[t("code",[s._v("maxInitialSize")]),s._v("： 与 "),t("code",[s._v("maxSize")]),s._v(" 类似，但只对 "),t("code",[s._v("entry")]),s._v(" 配置的入口模块生效；")]),s._v(" "),t("li",[t("code",[s._v("enforceSizeThreshold")]),s._v("： 超过这个尺寸的 Chunk 会被强制分包，忽略上述其它 Size 限制。")])]),s._v(" "),t("p",[s._v("那么，结合前面介绍的两种规则，"),t("code",[s._v("SplitChunksPlugin")]),s._v(" 的主体流程如下：")]),s._v(" "),t("ol",[t("li",[t("p",[t("code",[s._v("SplitChunksPlugin")]),s._v(" 尝试将命中 "),t("code",[s._v("minChunks")]),s._v(" 规则的 Module 统一抽到一个额外的 Chunk 对象；")])]),s._v(" "),t("li",[t("p",[s._v("判断该 Chunk 是否满足 "),t("code",[s._v("maxInitialRequests")]),s._v(" 阈值，若满足则进行下一步；")])]),s._v(" "),t("li",[t("p",[s._v("判断该 Chunk 资源的体积是否大于上述配置项 "),t("code",[s._v("minSize")]),s._v(" 声明的下限阈值；")]),s._v(" "),t("ul",[t("li",[s._v("如果体积"),t("strong",[s._v("小于")]),s._v(" "),t("code",[s._v("minSize")]),s._v(" 则取消这次分包，对应的 Module 依然会被合并入原来的 Chunk")]),s._v(" "),t("li",[s._v("如果 Chunk 体积"),t("strong",[s._v("大于")]),s._v(" "),t("code",[s._v("minSize")]),s._v(" 则判断是否超过 "),t("code",[s._v("maxSize")]),s._v("、"),t("code",[s._v("maxAsyncSize")]),s._v("、"),t("code",[s._v("maxInitialSize")]),s._v(" 声明的上限阈值，如果超过则尝试将该 Chunk 继续分割成更小的部分。")])])])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("p",[s._v("虽然 "),t("code",[s._v("maxSize")]),s._v(" 等阈值规则会产生更多的包体，但缓存粒度会更小，命中率相对也会更高，配合持久缓存与 HTTP2 的多路复用能力，网络性能反而会有正向收益。")]),s._v(" "),t("p",[s._v("优先级顺序为： "),t("code",[s._v("maxInitialRequest/maxAsyncRequests < maxSize < minSize")]),s._v("。而命中 "),t("code",[s._v("enforceSizeThreshold")]),s._v(" 阈值的 Chunk 会直接跳过这些条件判断，强制进行分包。")])]),s._v(" "),t("h3",{attrs:{id:"缓存组-cachegroups"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存组-cachegroups"}},[s._v("#")]),s._v(" 缓存组 cacheGroups")]),s._v(" "),t("p",[s._v("上述 "),t("code",[s._v("minChunks")]),s._v("、"),t("code",[s._v("maxInitialRequest")]),s._v("、"),t("code",[s._v("minSize")]),s._v(" 都属于分包条件，决定是否对什么情况下对那些 Module 做分包处理。此外， "),t("code",[s._v("SplitChunksPlugin")]),s._v(" 还提供了 "),t("code",[s._v("cacheGroups")]),s._v(" 配置项用于为不同文件组设置不同的规则。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("optimization")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("splitChunks")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("cacheGroups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("vendors")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("[\\\\/]node_modules[\\\\/]")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("minChunks")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("minSize")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("示例通过 "),t("code",[s._v("cacheGroups")]),s._v(" 属性设置 "),t("code",[s._v("vendors")]),s._v(" 缓存组，所有命中 "),t("code",[s._v("vendors.test")]),s._v(" 规则的模块都会被归类 "),t("code",[s._v("vendors")]),s._v(" 分组，优先应用该组下的 "),t("code",[s._v("minChunks")]),s._v("、"),t("code",[s._v("minSize")]),s._v(" 等分包配置。")]),s._v(" "),t("p",[t("code",[s._v("cacheGroups")]),s._v(" 支持上述 "),t("code",[s._v("minSice/minChunks/maxInitialRequest")]),s._v(" 等条件配置，此外还支持一些与分组逻辑强相关的属性，包括：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("test")]),s._v("：接受正则表达式、函数及字符串，所有符合 "),t("code",[s._v("test")]),s._v(" 判断的 Module 或 Chunk 都会被分到该组；")]),s._v(" "),t("li",[t("code",[s._v("type")]),s._v("：接受正则表达式、函数及字符串，与 "),t("code",[s._v("test")]),s._v(" 类似均用于筛选分组命中的模块，区别是它判断的依据是文件类型而不是文件名，例如 "),t("code",[s._v("type = 'json'")]),s._v(" 会命中所有 JSON 文件；")]),s._v(" "),t("li",[t("code",[s._v("idHint")]),s._v("：字符串型，用于设置 Chunk ID，它还会被追加到最终产物文件名中，例如 "),t("code",[s._v("idHint = 'vendors'")]),s._v(" 时，输出产物文件名形如 "),t("code",[s._v("vendors-xxx-xxx.js")]),s._v(" ；")]),s._v(" "),t("li",[t("code",[s._v("priority")]),s._v("：数字型，用于设置该分组的优先级，若模块命中多个缓存组，则优先被分到 "),t("code",[s._v("priority")]),s._v(" 更大的组。")])]),s._v(" "),t("p",[s._v("缓存组的作用在于能为不同类型的资源设置更具适用性的分包规则，一个典型场景是将所有 "),t("code",[s._v("node_modules")]),s._v(" 下的模块统一打包到 "),t("code",[s._v("vendors")]),s._v(" 产物，从而实现第三方库与业务代码的分离。")]),s._v(" "),t("p",[s._v("Webpack 提供了两个开箱即用的 "),t("code",[s._v("cacheGroups")]),s._v("，分别命名为 "),t("code",[s._v("default")]),s._v(" 与 "),t("code",[s._v("defaultVendors")]),s._v("，默认配置：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("optimization")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("splitChunks")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("cacheGroups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("idHint")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("reuseExistingChunk")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("minChunks")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("defaultVendors")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("idHint")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vendors"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("reuseExistingChunk")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("[\\\\/]node_modules[\\\\/]")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("i")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("priority")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("这两个配置组能帮助我们：")]),s._v(" "),t("ul",[t("li",[s._v("将所有 "),t("code",[s._v("node_modules")]),s._v(" 中的资源单独打包到 "),t("code",[s._v("vendors-xxx-xx.js")]),s._v(" 命名的产物")]),s._v(" "),t("li",[s._v("对引用次数大于等于 2 的模块 —— 也就是被多个 Chunk 引用的模块，单独打包")])]),s._v(" "),t("h2",{attrs:{id:"最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[s._v("#")]),s._v(" 最佳实践")]),s._v(" "),t("p",[t("code",[s._v("SplitChunksPlugin")]),s._v(" 支持的配置项：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("minChunks")]),s._v("：用于设置引用阈值，被引用次数超过该阈值的 Module 才会进行分包处理；")]),s._v(" "),t("li",[t("code",[s._v("maxInitialRequest/maxAsyncRequests")]),s._v("：用于限制 Initial Chunk(或 Async Chunk) 最大并行请求数，本质上是在限制最终产生的分包数量；")]),s._v(" "),t("li",[t("code",[s._v("minSize")]),s._v("： 超过这个尺寸的 Chunk 才会正式被分包；")]),s._v(" "),t("li",[t("code",[s._v("maxSize")]),s._v("： 超过这个尺寸的 Chunk 会尝试继续做分包；")]),s._v(" "),t("li",[t("code",[s._v("maxAsyncSize")]),s._v("： 与 "),t("code",[s._v("maxSize")]),s._v(" 功能类似，但只对异步引入的模块生效；")]),s._v(" "),t("li",[t("code",[s._v("maxInitialSize")]),s._v("： 与 "),t("code",[s._v("maxSize")]),s._v(" 类似，但只对 "),t("code",[s._v("entry")]),s._v(" 配置的入口模块生效；")]),s._v(" "),t("li",[t("code",[s._v("enforceSizeThreshold")]),s._v("： 超过这个尺寸的 Chunk 会被强制分包，忽略上述其它 size 限制；")]),s._v(" "),t("li",[t("code",[s._v("cacheGroups")]),s._v("：用于设置缓存组规则，为不同类型的资源设置更有针对性的分包策略。")])]),s._v(" "),t("p",[s._v("结合这些特性，业界已经总结了许多惯用的最佳分包策略，包括：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("针对 "),t("code",[s._v("node_modules")]),s._v(" 资源：")]),s._v(" "),t("ul",[t("li",[s._v("可以将 "),t("code",[s._v("node_modules")]),s._v(" 模块打包成单独文件(通过 "),t("code",[s._v("cacheGroups")]),s._v(" 实现)，防止业务代码的变更影响 NPM 包缓存，同时建议通过 "),t("code",[s._v("maxSize")]),s._v(" 设定阈值，防止 vendor 包体过大；")]),s._v(" "),t("li",[s._v("更激进的，如果生产环境已经部署 HTTP2/3 一类高性能网络协议，甚至可以考虑将每一个 NPM 包都打包成单独文件，具体实现可查看小册"),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub1s.com%2FTecvan-fe%2Fwebpack-book-samples%2Fblob%2F50c9a47ce3%2Fsplitchunks-seperate-npm%2Fwebpack.config.js%23L19-L20",target:"_blank",rel:"noopener noreferrer"}},[s._v("示例"),t("OutboundLink")],1),s._v("；")])])]),s._v(" "),t("li",[t("p",[s._v("针对业务代码：")]),s._v(" "),t("ul",[t("li",[s._v("设置 "),t("code",[s._v("common")]),s._v(" 分组，通过 "),t("code",[s._v("minChunks")]),s._v(" 配置项将使用率较高的资源合并为 Common 资源；")]),s._v(" "),t("li",[s._v("首屏用不上的代码，尽量以异步方式引入；")]),s._v(" "),t("li",[s._v("设置 "),t("code",[s._v("optimization.runtimeChunk")]),s._v(" 为 "),t("code",[s._v("true")]),s._v("，将运行时代码拆分为独立资源。")])])])]),s._v(" "),t("p",[s._v("Chunk 是 Webpack 实现模块打包的关键设计，Webpack 会首先为 Entry 模块、异步模块、Runtime 模块(取决于配置) 创建 Chunk 容器，之后按照 "),t("code",[s._v("splitChunks")]),s._v(" 配置进一步优化、裁剪分包内容。")]),s._v(" "),t("p",[t("code",[s._v("splitChunks")]),s._v(" 规则比较复杂，大致上可以分类为：")]),s._v(" "),t("ul",[t("li",[s._v("规则类：如 "),t("code",[s._v("minSize/minChunks")]),s._v(" 等，匹配这些条件的 Module 都会被单独分包；")]),s._v(" "),t("li",[t("code",[s._v("cacheGroup")]),s._v("：可以理解为针对特定资源的次级规则集合。")])]),s._v(" "),t("p",[s._v("实践中，分包策略的好坏直接影响应用的运行性能，常用策略一是单独打包 "),t("code",[s._v("node_modules")]),s._v(" 代码(习惯称为 "),t("code",[s._v("vendor")]),s._v(")，二是单独打包被频繁使用的模块(习惯称为 "),t("code",[s._v("common")]),s._v(")。")])])}),[],!1,null,null,null);t.default=a.exports}}]);