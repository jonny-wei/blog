(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{428:function(e,r,t){"use strict";t.r(r);var n=t(6),i=Object(n.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"代码压缩"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代码压缩"}},[e._v("#")]),e._v(" 代码压缩")]),e._v(" "),r("p",[r("strong",[e._v("代码压缩")]),e._v(" 是指在不改变代码功能的前提下，从声明式（HTML、CSS）或命令式（JavaScript）语言中删除所有不必要的字符（备注、变量名压缩、逻辑语句合并等），减少代码体积的过程，这在 Web 场景中能够有效减少浏览器从服务器获取代码资源所需要消耗的传输量，降低网络通讯耗时，提升页面启动速度，是一种非常基础且性价比特别高的应用性能优化方案。")]),e._v(" "),r("h2",{attrs:{id:"原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[e._v("#")]),e._v(" 原理")]),e._v(" "),r("p",[e._v("先将字符串形态的代码转换为结构化、容易分析处理的 AST（抽象语法树）形态，之后在 AST 上应用上面的规则做各种语法、语义、逻辑推理与简化替换，最后按精简过的 AST 生成结果代码")]),e._v(" "),r("h2",{attrs:{id:"实践"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实践"}},[e._v("#")]),e._v(" 实践")]),e._v(" "),r("h3",{attrs:{id:"使用-terserwebpackplugin-压缩-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用-terserwebpackplugin-压缩-js"}},[e._v("#")]),e._v(" 使用 TerserWebpackPlugin 压缩 JS")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fterser%2Fterser",target:"_blank",rel:"noopener noreferrer"}},[e._v("Terser"),r("OutboundLink")],1),e._v(" 是当下 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fnpmtrends.com%2Fbabel-minify-vs-terser-vs-uglify-js",target:"_blank",rel:"noopener noreferrer"}},[e._v("最为流行"),r("OutboundLink")],1),e._v(" 的 ES6 代码压缩工具之一，支持 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FDead-code_elimination",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dead-Code Eliminate"),r("OutboundLink")],1),e._v("、删除注释、删除空格、代码合并、变量名简化等等"),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fterser%2Fterser%23compress-options",target:"_blank",rel:"noopener noreferrer"}},[e._v("一系列"),r("OutboundLink")],1),e._v("代码压缩功能。Terser 的前身是大名鼎鼎的 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmishoo%2FUglifyJS",target:"_blank",rel:"noopener noreferrer"}},[e._v("UglifyJS"),r("OutboundLink")],1),e._v("，它在 UglifyJS 基础上增加了 ES6 语法支持，并重构代码解析、压缩算法，使得执行效率与压缩率都有较大提升。")]),e._v(" "),r("p",[e._v("Webpack5.0 后默认使用 Terser 作为 JavaScript 代码压缩器，简单用法只需通过 optimization.minimize 配置项开启压缩功能即可。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fwebpack-contrib%2Fterser-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("terser-webpack-plugin"),r("OutboundLink")],1),e._v(" 插件并不只是 Terser 的简单包装，它更像是一个代码压缩功能骨架，底层还支持使用 SWC、UglifyJS、ESBuild 作为压缩器，使用时只需要通过 minify 参数切换即可。不同压缩器功能、性能差异较大，据我了解，ESBuild 与 SWC 这两个基于 Go 与 Rust 编写的压缩器性能更佳，且效果已经基本趋于稳定，虽然功能还比不上 Terser，但某些构建性能敏感场景下不失为一种不错的选择。")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("配置项")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fwebpack-contrib%2Fterser-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("terser-webpack-plugin"),r("OutboundLink")],1),e._v(" 是一个颇为复杂的 Webpack 插件，提供下述 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fterser-webpack-plugin%23options",target:"_blank",rel:"noopener noreferrer"}},[e._v("配置项"),r("OutboundLink")],1),e._v("：")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("test")]),e._v("：只有命中该配置的产物路径才会执行压缩，功能与 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwebpack.js.org%2Fconfiguration%2Fmodule%2F%23ruletest",target:"_blank",rel:"noopener noreferrer"}},[e._v("module.rules.test"),r("OutboundLink")],1),e._v(" 相似；")]),e._v(" "),r("li",[r("code",[e._v("include")]),e._v("：在该范围内的产物才会执行压缩，功能与 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwebpack.js.org%2Fconfiguration%2Fmodule%2F%23ruleinclude",target:"_blank",rel:"noopener noreferrer"}},[e._v("module.rules.include"),r("OutboundLink")],1),e._v(" 相似；")]),e._v(" "),r("li",[r("code",[e._v("exclude")]),e._v("：与 "),r("code",[e._v("include")]),e._v(" 相反，不在该范围内的产物才会执行压缩，功能与 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwebpack.js.org%2Fconfiguration%2Fmodule%2F%23ruleexclude",target:"_blank",rel:"noopener noreferrer"}},[e._v("module.rules.exclude"),r("OutboundLink")],1),e._v(" 相似；")]),e._v(" "),r("li",[r("code",[e._v("parallel")]),e._v("：是否启动并行压缩，默认值为 "),r("code",[e._v("true")]),e._v("，此时会按 "),r("code",[e._v("os.cpus().length - 1")]),e._v(" 启动若干进程并发执行；")]),e._v(" "),r("li",[r("code",[e._v("minify")]),e._v("：用于配置压缩器，支持传入自定义压缩函数，也支持 "),r("code",[e._v("swc/esbuild/uglifyjs")]),e._v(" 等值，下面我们再展开讲解；")]),e._v(" "),r("li",[r("code",[e._v("terserOptions")]),e._v("：传入 "),r("code",[e._v("minify")]),e._v(" —— “压缩器”函数的配置参数；")]),e._v(" "),r("li",[r("code",[e._v("extractComments")]),e._v("：是否将代码中的备注抽取为单独文件，可配合特殊备注如 "),r("code",[e._v("@license")]),e._v(" 使用。")])])]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("内置压缩器")]),e._v(" "),r("p",[e._v("TerserPlugin 内置如下压缩器：")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("TerserPlugin.terserMinify")]),e._v("：依赖于 "),r("code",[e._v("terser")]),e._v(" 库；")]),e._v(" "),r("li",[r("code",[e._v("TerserPlugin.uglifyJsMinify")]),e._v("：依赖于 "),r("code",[e._v("uglify-js")]),e._v("，需要手动安装 "),r("code",[e._v("yarn add -D uglify-js")]),e._v("；")]),e._v(" "),r("li",[r("code",[e._v("TerserPlugin.swcMinify")]),e._v("：依赖于 "),r("code",[e._v("@swc/core")]),e._v("，需要手动安装 "),r("code",[e._v("yarn add -D")]),e._v(" "),r("code",[e._v("@swc/core")]),e._v("；")]),e._v(" "),r("li",[r("code",[e._v("TerserPlugin.esbuildMinify")]),e._v("：依赖于 "),r("code",[e._v("esbuild")]),e._v("，需要手动安装 "),r("code",[e._v("yarn add -D esbuild")]),e._v("。")])]),e._v(" "),r("p",[e._v("另外，"),r("code",[e._v("terserOptions")]),e._v(" 配置也不仅仅专供 "),r("code",[e._v("terser")]),e._v(" 使用，而是会透传给具体的 "),r("code",[e._v("minifier")]),e._v("，因此使用不同压缩器时支持的配置选项也会不同。")])]),e._v(" "),r("h3",{attrs:{id:"使用-cssminimizerwebpackplugin-压缩-css"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用-cssminimizerwebpackplugin-压缩-css"}},[e._v("#")]),e._v(" 使用 CssMinimizerWebpackPlugin 压缩 CSS")]),e._v(" "),r("ul",[r("li",[e._v("CssMinimizerPlugin.cssnanoMinify：默认值，使用 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fcssnano.co%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("cssnano"),r("OutboundLink")],1),e._v(" 压缩代码，不需要额外安装依赖；")]),e._v(" "),r("li",[e._v("CssMinimizerPlugin.cssoMinify：使用 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fcss%2Fcsso",target:"_blank",rel:"noopener noreferrer"}},[e._v("csso"),r("OutboundLink")],1),e._v(" 压缩代码，需要手动安装依赖 yarn add -D csso；")]),e._v(" "),r("li",[e._v("CssMinimizerPlugin.cleanCssMinify：使用 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fclean-css%2Fclean-css",target:"_blank",rel:"noopener noreferrer"}},[e._v("clean-css"),r("OutboundLink")],1),e._v(" 压缩代码，需要手动安装依赖 yarn add -D clean-css；")]),e._v(" "),r("li",[e._v("CssMinimizerPlugin.esbuildMinify：使用 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fesbuild.github.io%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESBuild"),r("OutboundLink")],1),e._v(" 压缩代码，需要手动安装依赖 yarn add -D esbuild；")]),e._v(" "),r("li",[e._v("CssMinimizerPlugin.parcelCssMinify：使用 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fparcel-bundler%2Fparcel-css",target:"_blank",rel:"noopener noreferrer"}},[e._v("parcel-css"),r("OutboundLink")],1),e._v(" 压缩代码，需要手动安装依赖 yarn add -D @parcel/css。")])]),e._v(" "),r("p",[e._v("其中 "),r("code",[e._v("parcel-css")]),e._v(" 与 "),r("code",[e._v("ESBuild")]),e._v(" 压缩性能相对较佳，但两者功能与兼容性稍弱，多数情况下推荐使用 "),r("code",[e._v("cssnano")]),e._v("。")]),e._v(" "),r("h3",{attrs:{id:"使用-htmlminifierterser-压缩-html"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用-htmlminifierterser-压缩-html"}},[e._v("#")]),e._v(" 使用 HtmlMinifierTerser 压缩 HTML")]),e._v(" "),r("p",[e._v("某些场景如 SSG 或官网一类偏静态的应用中就存在大量可被优化的 HTML 代码，为此社区也提供了一些相关的工程化工具，例如 "),r("code",[e._v("html-minifier-terser")]),e._v("。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fterser%2Fhtml-minifier-terser",target:"_blank",rel:"noopener noreferrer"}},[e._v("html-minifier-terser"),r("OutboundLink")],1),e._v(" 是一个基于 JavaScript 实现的、高度可配置的 HTML 压缩器，支持一系列 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fterser%2Fhtml-minifier-terser%23options-quick-reference",target:"_blank",rel:"noopener noreferrer"}},[e._v("压缩特性"),r("OutboundLink")],1),e._v(" 。我们可以借助 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwebpack.js.org%2Fplugins%2Fhtml-minimizer-webpack-plugin%2F",target:"_blank",rel:"noopener noreferrer"}},[e._v("html-minimizer-webpack-plugin"),r("OutboundLink")],1),e._v(" 插件接入 html-minifier-terser 压缩器。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fterser%2Fhtml-minifier-terser",target:"_blank",rel:"noopener noreferrer"}},[e._v("html-minifier-terser"),r("OutboundLink")],1),e._v(" 提供的默认配置有点过于保守，例如 "),r("code",[e._v("removeComments")]),e._v(" —— 用于移除代码备注的配置，或者 "),r("code",[e._v("useShortDoctype")]),e._v(" 用于简化 "),r("code",[e._v("<doctype>")]),e._v(" 标签的配置，默认竟然都是 false，这放在当下浏览器功能已经非常强劲，兼容性问题已经被大大抹平的背景下，有点大可不必了。因此，建议你使用时先到 "),r("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fterser%2Fhtml-minifier-terser%23options-quick-reference",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网"),r("OutboundLink")],1),e._v(" 仔细了解各项配置，尽可能开启更多压缩功能。")]),e._v(" "),r("h2",{attrs:{id:"小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[e._v("#")]),e._v(" 小结")]),e._v(" "),r("p",[e._v("代码压缩的重点就在于“保持功能性”的前提下尽可能“删除”不必要的字符，原理虽不复杂但必须对语言特性有比较深的理解才能实现，所幸社区已经提供了各种各样的压缩工具，我们只需要简单配置就能轻松接入。")]),e._v(" "),r("p",[e._v("在 Webpack 中需要使用 "),r("code",[e._v("optimization.minimizer")]),e._v(" 数组接入代码压缩插件，比较常用的插件有：")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("terser-webpack-plugin")]),e._v("：用于压缩 ES6 代码的插件；")]),e._v(" "),r("li",[r("code",[e._v("css-minimizer-webpack-plugin")]),e._v("：用于压缩 CSS 代码的插件；")]),e._v(" "),r("li",[r("code",[e._v("html-minifier-terser")]),e._v("：用于压缩 HTML 代码的插件。")])]),e._v(" "),r("p",[e._v("这些插件用法非常相似，都支持 "),r("code",[e._v("include/test/exclude")]),e._v(" 配置项，用于控制压缩功能的应用范围；也都支持 "),r("code",[e._v("minify")]),e._v(" 配置项，用于切换压缩器，借助这个配置我们可以使用性能更佳的工具，如 ESBuild 执行压缩。")])])}),[],!1,null,null,null);r.default=i.exports}}]);