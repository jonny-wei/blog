(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{484:function(t,e,s){"use strict";s.r(e);var n=s(14),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"摘要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#摘要"}},[t._v("#")]),t._v(" 摘要")]),t._v(" "),s("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。")]),t._v(" "),s("p",[t._v("Vuex 可以帮助我们"),s("strong",[t._v("管理共享状态")]),t._v("。如果开发中大型单页应用，可能会考虑如何更好地在组件外部管理状态，那么使用 Vuex 再好不过。\n但是，如果开发简单应用，一个简单的 store 模式就足够了，不需要 Vuex。Vuex 主要解决"),s("strong",[t._v("深层嵌套")]),t._v("和"),s("strong",[t._v("非直接关联组件之间")]),t._v("的"),s("strong",[t._v("通信")]),t._v("。\n通过定义和隔离状态管理中的各种概念并通过强制规则维持视图和状态间的独立性，使我们的代码变得更结构化且易维护。")])])}),[],!1,null,null,null);e.default=r.exports}}]);