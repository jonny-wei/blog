(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{556:function(e,v,_){"use strict";_.r(v);var i=_(15),t=Object(i.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"webview"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webview"}},[e._v("#")]),e._v(" WebView")]),e._v(" "),_("p",[e._v("现如今，在做移动端 H5 开发时，少不了与 Native 之间进行交互。而在Native中，H5的承载容器为 WebView，其核心是使用 WebView 控件实现加载 url。")]),e._v(" "),_("h2",{attrs:{id:"简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[e._v("#")]),e._v(" 简介")]),e._v(" "),_("p",[_("code",[e._v("WebView")]),e._v(" 用来展示网页的 "),_("code",[e._v("view")]),e._v(" 组件，该组件是你运行自己的浏览器或者在你的线程中展示线上内容的基础。使用 "),_("code",[e._v("Webkit")]),e._v(" 渲染引擎来展示，并且支持前进后退等基于浏览历史，放大缩小，等更多功能。简单来说 "),_("code",[e._v("WebView")]),e._v(" 是手机中内置了一款高性能 "),_("code",[e._v("Webkit")]),e._v(" 内核浏览器，在 SDK 中封装的一个组件。不过没有提供地址栏和导航栏，只是单纯的展示一个网页界面。")]),e._v(" "),_("p",[_("code",[e._v("WebView")]),e._v(" 可以简单理解为页面里的 "),_("code",[e._v("iframe")]),e._v(" 。原生 "),_("code",[e._v("app")]),e._v(" 与 "),_("code",[e._v("WebView")]),e._v(" 的交互可以简单看作是页面与页面内 "),_("code",[e._v("iframe")]),e._v(" 页面进行的交互。就如页面与页面内的 "),_("code",[e._v("iframe")]),e._v(" 共用一个 "),_("code",[e._v("Window")]),e._v("  一样，原生与 "),_("code",[e._v("WebView")]),e._v(" 也共用了一套原生的方法。")]),e._v(" "),_("p",[e._v("使用了 "),_("code",[e._v("WebView")]),e._v(" 来承载 "),_("code",[e._v("H5")]),e._v("，那么便少不了与 "),_("code",[e._v("Native")]),e._v(" 之间发生交互，"),_("code",[e._v("WebView")]),e._v(" 所承载的页面，通过 "),_("code",[e._v("JS")]),e._v(" 与 "),_("code",[e._v("Native")]),e._v(" 进行通信，我们将这个通信的”桥梁“为 "),_("code",[e._v("JSBridge")]),e._v("。微信内置浏览器的 "),_("code",[e._v("H5")]),e._v(" 开发，有个经常出现的东西，叫做 "),_("code",[e._v("WeixinJSBridge")]),e._v("（js-sdk）。")]),e._v(" "),_("p",[_("img",{attrs:{src:"/blog/images/mobile/webview1.png",alt:"webview1"}})]),e._v(" "),_("h2",{attrs:{id:"android-webview"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#android-webview"}},[e._v("#")]),e._v(" Android WebView")]),e._v(" "),_("p",[e._v("Android 4.4 前："),_("code",[e._v("Android WebView")]),e._v(" 在低版本 & 高版本采用了不同的 Webkit 版本的内核（正因为如此，H5 的很多新特性，在 Android 版本小于4.4的安卓机上，都不支持） Android 4.4后：原本基于 "),_("code",[e._v("Webkit")]),e._v(" 的 "),_("code",[e._v("WebView")]),e._v(" 开始基于 "),_("code",[e._v("Chromium")]),e._v(" 内核，这一改动大大提升了 "),_("code",[e._v("WebView")]),e._v(" 组件的性能以及对 "),_("code",[e._v("HTML5")]),e._v(", "),_("code",[e._v("CSS3")]),e._v(", "),_("code",[e._v("JavaScript")]),e._v("的支持。不过它的API却没有很大的改动，在兼容低版本的同时只引进了少部分新的 API，并不需要你做很大的改动。")]),e._v(" "),_("p",[e._v("在 Android WebView，要实现 JS 调用 Java，有 3 种方法：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("JavascriptInterface")])]),e._v(" "),_("li",[_("code",[e._v("WebViewClient.shouldOverrideUrlLoading()")])]),e._v(" "),_("li",[_("code",[e._v("WebChromeClient.onXXX()")])])]),e._v(" "),_("h2",{attrs:{id:"ios-webview"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ios-webview"}},[e._v("#")]),e._v(" IOS WebView")]),e._v(" "),_("p",[e._v("在 IOS8 之前，苹果手机的 WebView 使用的 UIWebView，UIWebView长期以来存在某些问题：")]),e._v(" "),_("ul",[_("li",[e._v("加载速度慢")]),e._v(" "),_("li",[e._v("存在内存泄漏")]),e._v(" "),_("li",[e._v("内存占用多，内存优化困难")]),e._v(" "),_("li",[e._v("如果内存占用过多还可能因为占用过多被系统kill掉 在 WWDC 2014 大会上，IOS8推出了 WKWebView，WKWebView 是现代 Webkit API 在 iOS 8 和 OS X Yosemite 应用中的核心部分。它代替了 UIKit 中的 UIWebView 和 AppKit 中的 WebView，提供了统一的跨双平台 API。拥有 60fps 滚动刷新率、内置手势、高效的 app 和 web 信息交换通道、和 Safari 相同的 JavaScript 引擎。")])]),e._v(" "),_("h2",{attrs:{id:"通信桥梁-jsbridge"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#通信桥梁-jsbridge"}},[e._v("#")]),e._v(" 通信桥梁 - JSBridge")]),e._v(" "),_("p",[e._v("WebView 通过 JSBridge 与 Native 侧通信。通信原理是 "),_("code",[e._v("JSBridge")]),e._v(" 实现的核心，实现方式可以各种各样，但是万变不离其宗。这里，推荐的实现方式如下：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("JavaScript")]),e._v(" 调用 "),_("code",[e._v("Native")]),e._v(" 推荐使用 "),_("strong",[_("code",[e._v("注入 API")])]),e._v(" 的方式。（ iOS6 忽略，Android 4.2 以下使用 "),_("code",[e._v("WebViewClient")]),e._v(" 的 "),_("code",[e._v("onJsPrompt")]),e._v(" 方式。）")]),e._v(" "),_("li",[_("code",[e._v("Native")]),e._v(" 调用 "),_("code",[e._v("JavaScript")]),e._v(" 则直接执行拼接好的 "),_("code",[e._v("JavaScript")]),e._v(" 代码即可。")])]),e._v(" "),_("p",[e._v("对于其他方式，诸如 React Native、微信小程序 的通信方式都与上描述的近似，并根据实际情况进行优化。")]),e._v(" "),_("p",[e._v("JSBridge 只是解决了 Native 和 Web 的互相调用问题，如果我想借助 Native 加强 Web 怎么办？这时候就有了一些探索：")]),e._v(" "),_("ul",[_("li",[_("strong",[e._v("预热")]),e._v("：提前创建和初始化 WebView，甚至实现 WebView 容器池，减少 WebView 的启动时间")]),e._v(" "),_("li",[_("strong",[e._v("缓存")]),e._v("：把常用的 Web 资源预先存在 Native 本地，然后拦截浏览器网络请求重定向到本地，这样就可以加快 Web 的资源加载速度（也叫“离线包”方案）；")]),e._v(" "),_("li",[_("strong",[e._v("劫持")]),e._v("：比如说 Web 对网络加载的控制力比较弱，部分有能力的厂商会把所有的网络请求都劫持下来交给 Native 去做，这样做可以更灵活的管理 Web 请求")]),e._v(" "),_("li",[_("strong",[e._v("替换")]),e._v("：替换一般指替换 Web 的 "),_("code",[e._v("Img")]),e._v(" 标签和 "),_("code",[e._v("Video")]),e._v(" 标签，这个最常见的地方就是各大新闻类客户端。因为新闻的动态性和实时性，新闻都是由各个编辑/自媒体通过后台编辑下发的，这时候要利用 "),_("strong",[e._v("Web 强大的排版功能")]),e._v("去显示文本内容；但是为了加载速度和观看体验，图片和视频都是 Native 组件替换的")])]),e._v(" "),_("h2",{attrs:{id:"webview-缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#webview-缓存"}},[e._v("#")]),e._v(" WebView 缓存")]),e._v(" "),_("p",[e._v("打开一个 WebView 通常会经历以下几个阶段：")]),e._v(" "),_("ul",[_("li",[e._v("交互无反馈")]),e._v(" "),_("li",[e._v("到达新的页面，页面白屏")]),e._v(" "),_("li",[e._v("页面基本框架出现，但是没有数据；页面处于 loading 状态")]),e._v(" "),_("li",[e._v("出现所需的数据")])]),e._v(" "),_("p",[_("strong",[e._v("除了白屏，影响 Web 体验的问题还有缺少操作的反馈，主要表现在两个方面：页面切换的生硬和点击的迟滞感。")])]),e._v(" "),_("p",[e._v("如果从程序上观察，WebView 启动过程大概分为以下几个阶段：")]),e._v(" "),_("p",[_("img",{attrs:{src:"/blog/images/mobile/webview2.png",alt:"webview2"}})]),e._v(" "),_("p",[e._v("WebView 经常会加载一些 js 文件（例如和 WebView 用来 Native 通信的 bridge.js），而这些 js 文件不会经常发生变化，所以我们希望 js 在 WebView 里面加载一次之后，如果 js 没有发生变化，下次就不用再发起网络请求去加载，从而减少流量和资源的占用。那么有什么方式可以达到这个目的呢？得从 WebView 的缓存入手：")]),e._v(" "),_("p",[e._v("WebView 主要包括两类缓存：")]),e._v(" "),_("ul",[_("li",[e._v("浏览器自带的网页数据缓存，这是所有的浏览器都支持的、由HTTP协议定义的缓存。")]),e._v(" "),_("li",[e._v("H5 缓存，这是由 web 页面的开发者设置的，H5 缓存主要包括了 App Cache、DOM Storage、Local Storage、Web SQL Database 存储机制等。")])]),e._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6932083257286590477#heading-6",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端工程师所需要了解的WebView"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/7016883220025180191#heading-5",target:"_blank",rel:"noopener noreferrer"}},[e._v("Android WebView H5 秒开方案总结"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/7038775031597367310",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebView秒开方案探索"),_("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=t.exports}}]);