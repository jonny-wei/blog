(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{464:function(s,t,a){"use strict";a.r(t);var n=a(15),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"编排引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编排引擎"}},[s._v("#")]),s._v(" 编排引擎")]),s._v(" "),a("p",[s._v("如何从零开始设计编排模块，设计思路是什么? 思考编排的本质是什么? 如何围绕着本质设计并实现对应的功能模块。")]),s._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("所谓编排，即"),a("strong",[s._v("将设计器中的所有物料，进行布局设置、组件设置、交互设置(JS 编写/逻辑编排)后， 形成符合业务诉求的 schema 描述")]),s._v("。 编排的本质是生产符合《低代码引擎搭建协议规范》的数据，在这个场景里，协议是通过 JSON 来承载的 。专注于 Schema 可视化编排，以可视化的交互方式提供页面结构编排服务。")]),s._v(" "),a("p",[s._v("在真实场景，节点数可能有成百上千，每个节点都具有新增、删除、修改、移动、插入子节点等 操作，同时还有若干约束，JSON 结构操作起来不是很便利，于是我们仿 DOM 设计了"),a("strong",[s._v("节点模型")]),s._v(" & "),a("strong",[s._v("属性模型")]),s._v("，用更具可编程性的方式来编排，这是编排系统的基石。")]),s._v(" "),a("p",[s._v("那么"),a("strong",[s._v("编排的本质是什么")]),s._v("？")]),s._v(" "),a("p",[s._v("是"),a("strong",[s._v("产生符合")]),a("a",{attrs:{href:"https://f2e.alibaba-inc.com/markdown?spm=a2o8t.11089562.0.0.3ef96654TDQG3d&gitlab=f2e-specs%2Fmo-specs%2F2.specs%2F2.lowcode-spec.md",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[s._v("搭建协议")]),a("OutboundLink")],1),s._v("**的数据结构，**讲直白点，就是构造一个 JSON 数据结构，直接修改这个 JSON 数据结构，即可完成编排！schema to schema。JSON 结构操作起来不是很便利，于是我们仿 DOM 设计了 "),a("strong",[s._v("节点模型 & 属性模型，"),a("strong",[s._v("用更具可编程性的方式来编排，这是")]),s._v("编排系统的基石")]),s._v("。")]),s._v(" "),a("p",[s._v("其次，每次编排动作后(CRUD)，都需要实时的渲染出视图。广义的视图应该包括各种平台上的展现，浏览器、Rax、小程序、Flutter 等等，所以使用何种渲染器去渲染 JSON 结构应该可以由用户去扩展，我们定义一种机制去衔接设计态和渲染态。 除此之外，还有诸如以下许多模块，这些功能的目的都是辅助用户在画布上有更好的编排体验、扩展能力而逐个增加设计的。")]),s._v(" "),a("ol",[a("li",[s._v("编排面板的整体功能区划分设计")]),s._v(" "),a("li",[s._v("节点属性设计;节点删除、移动等操作设计，容器节点设计")]),s._v(" "),a("li",[s._v("节点拖拽功能、拖拽定位设计和实现")]),s._v(" "),a("li",[s._v("节点在画布上的辅助功能，比如 hover、选中、选中时的操作项、resize、拖拽占位符等")]),s._v(" "),a("li",[s._v("设计态和渲染态的坐标系转换，滚动监听等")]),s._v(" "),a("li",[s._v("快捷键机制")]),s._v(" "),a("li",[s._v("历史功能，撤销和重做")]),s._v(" "),a("li",[s._v("结构化的插件扩展机制")]),s._v(" "),a("li",[s._v("原地编辑功能")])]),s._v(" "),a("h2",{attrs:{id:"整体架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体架构"}},[s._v("#")]),s._v(" 整体架构")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/images/architecture/lowcode15.png",alt:"lowcode15"}})]),s._v(" "),a("p",[a("strong",[s._v("架构说明与解析（重点）：")])]),s._v(" "),a("p",[s._v("编排引擎完成的是将输入的物料、SCHEMA，经过用户的编排操作产出新的 SCHEMA 的过程（schema to schema）。因此，整个流程的"),a("strong",[s._v("起点")]),s._v("是物料的接入和 SCHEMA 的加载 ①，"),a("strong",[s._v("终点")]),s._v("则是描述管理器 ④ 导出新的 SCHEMA。流程内会经过引擎工作区的编排 ② 和 碰撞算法检测 ③。")]),s._v(" "),a("p",[s._v("在整个流程的最开始准备阶段物料 ① 会经过装饰器装饰，为其增加生命周期函数，就能在物料编排过程的各个生命周期中处理特殊的业务逻辑，例如：下拉菜单的 Menu 渲染之后可以添加子节点 Menu.Item，也会为增加拖拽能力，使物料变成可拖拽物料，同时监听物料的各种编排事件（例如 drag、dropOver、dropEnd、hover 等），从而进行编排逻辑处理。")]),s._v(" "),a("p",[s._v("在准备阶段之后，用户就可以在引擎工作区 ② 进行页面搭建，你可以进行如下操作：")]),s._v(" "),a("ul",[a("li",[s._v("实体区块：用于展示页面搭建的物料、模型的列表，用户可以将其拖拽到画布区块中；")]),s._v(" "),a("li",[s._v("画布区块：用于页面编排的操作面板，对用户的编排行为进行响应，实时刷新画布面板；")]),s._v(" "),a("li",[s._v("操作区块：用于对页面、区块、模型的描述、变量、函数、事件的自定义的修改和展示；")]),s._v(" "),a("li",[s._v("属性面板：用于物料、区块、模型的属性编辑、事件绑定、数据绑定的操作面板；")]),s._v(" "),a("li",[s._v("大纲面板：用于页面大纲树展示的面板，方便用户查看页面结构，快速选定所需要的节点；")]),s._v(" "),a("li",[s._v("代码面板：用于页面全局函数，以及页面生命周期函数的业务定制开发。")])]),s._v(" "),a("p",[s._v("上面所有的区块和面板在引擎内都内置一个相对简单的实现，然而上层的业务搭建中台业务复杂，各个模块的自定义程度高，例如：自定义的实体区块、自定义的画布事件、自定义的操作区域等，这些业务拓展点在引擎中都需要被支持的，引擎整体设计遵循开放封闭原则，封装变化，降低耦合，采用 Event Bus 的机制和核心能力输出方式满足高级的业务拓展要求，将引擎内操作事件广播出去，供第三方使用，同时提供核心能力，如 数据拖拽能力、操作 Schema 能力、Schema 导入/导出能力、历史版本管理能（回滚）力。")]),s._v(" "),a("p",[s._v("用户在引擎工作区进行页面搭建时，对于流式布局的拖拽方案，一定程度会限制用户的布局能力，以保证生成代码的可读性和可用性，引擎需要根据用户操作节点的位置坐标，进行碰撞算法检测 ③，根据用户拖拽的意图，计算出用户操作的节点应正确插入到 Schema 的哪个位置。")]),s._v(" "),a("p",[s._v("最后，用户在引擎工作区上所有编排操作，最终都会通过描述管理器 ④ SchemaManager 类（封装了对 Schema 的常见操作）统一处理，转换成对 Schema 的修改，从而完成引擎的最后流程。")]),s._v(" "),a("h3",{attrs:{id:"总体设计原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总体设计原则"}},[s._v("#")]),s._v(" 总体设计原则")]),s._v(" "),a("ul",[a("li",[s._v("编排模块针对单个或多个页面、区块级编辑，可独立使用")]),s._v(" "),a("li",[s._v("编排模块在一个页面可多个同时使用，互不影响，状态互相隔离，但一般在编辑器框架中只使用一个")]),s._v(" "),a("li",[s._v("其中模拟器基于渲染器封装，渲染模块可被替换")]),s._v(" "),a("li",[s._v("输入输出符合《低代码搭建基础协议规范》的 Schema JSON")]),s._v(" "),a("li",[s._v("模型抽象与视图表现层分离设计")])]),s._v(" "),a("h4",{attrs:{id:"编排实例设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编排实例设计"}},[s._v("#")]),s._v(" 编排实例设计")]),s._v(" "),a("ul",[a("li",[s._v("内容的存取")]),s._v(" "),a("li",[s._v("选区的读取及控制")]),s._v(" "),a("li",[s._v("历史操作记录的访问控制")]),s._v(" "),a("li",[s._v("拖拽发起")]),s._v(" "),a("li",[s._v("新增拖拽投入区域：比如大纲树的拖拽")]),s._v(" "),a("li",[s._v("节点 CRUD")]),s._v(" "),a("li",[s._v("新增节点内容")]),s._v(" "),a("li",[s._v("事件反馈")]),s._v(" "),a("li",[s._v("对以下字段进行编辑")])]),s._v(" "),a("h4",{attrs:{id:"选取操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选取操作"}},[s._v("#")]),s._v(" 选取操作")]),s._v(" "),a("ul",[a("li",[s._v("选中节点：选中一个或多个节点")]),s._v(" "),a("li",[s._v("取消选中")]),s._v(" "),a("li",[s._v("获取当前选中的节点")]),s._v(" "),a("li",[s._v("选区发生变化")]),s._v(" "),a("li",[s._v("内容变化时调整选中项")])]),s._v(" "),a("h4",{attrs:{id:"历史操作记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#历史操作记录"}},[s._v("#")]),s._v(" 历史操作记录")]),s._v(" "),a("ul",[a("li",[s._v("撤销、重做")]),s._v(" "),a("li",[s._v("设置保存点")]),s._v(" "),a("li",[s._v("是否在保存点：判断是否编辑")]),s._v(" "),a("li",[s._v("状态变化通知")]),s._v(" "),a("li",[s._v("获取状态：是否可撤销、是否可重做、是否在保存点")]),s._v(" "),a("li",[s._v("可设置记录阀门，短时间多次编辑记录到一个点")])]),s._v(" "),a("h2",{attrs:{id:"模型设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模型设计"}},[s._v("#")]),s._v(" 模型设计")]),s._v(" "),a("p",[s._v("编排实际上操作 schema，但是实际代码运行的过程中，我们将 schema 分成了很多层，每一层有各自的职责，他们所负责的功能是明确清晰的。这就是低代码引擎中的"),a("strong",[s._v("模型设计")]),s._v("。通过将 schema 和常用的操作等结合起来，最终将低代码引擎的模型分为"),a("strong",[s._v("节点模型、属性模型、 文档模型和项目模型")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"项目模型-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目模型-project"}},[s._v("#")]),s._v(" 项目模型 - Project")]),s._v(" "),a("p",[s._v("项目模型提供项目管理能力。通常一个引擎启动会默认创建一个 "),a("code",[s._v("Project")]),s._v(" 实例，有且只有一个。项目模型实例下可以持有多个文档模型的实例，而当前处于设计器设计状态的文档模型，我们将其添加 active 标识，也将其称为 "),a("code",[s._v("currentDocument")]),s._v("，可以通过 "),a("code",[s._v("project.currentDocument")]),s._v(" 获得。")]),s._v(" "),a("p",[s._v("一个 "),a("code",[s._v("Project")]),s._v(" 包含若干个 "),a("code",[s._v("DocumentModel")]),s._v(" 实例，即项目模型和文档模型的关系是 1 对 n")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Project")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  documents"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" DocumentContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  displayMode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'single'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'split'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// P2")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDocument")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" DocumentContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addDocument")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" DocumentSchema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" DocumentContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getProjectSchema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ProjectSchema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setProjectSchema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("schema"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ProjectSchema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 分字段设置储存数据\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'componentsTree'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'componentsMap'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'utils'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'constants'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'i18n'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'css'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dataSource'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 分字段设置储存数据\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'componentsTree'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'componentsMap'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'utils'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'constants'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'i18n'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'css'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dataSource'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * document 发生变化\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onCurrentDocumentChange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("document"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" DocumentModel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 画布渲染器 ready\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onRendererReady")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("renderer"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ISimulatorRenderer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("h3",{attrs:{id:"文档模型-documentmodel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档模型-documentmodel"}},[s._v("#")]),s._v(" 文档模型 -  DocumentModel")]),s._v(" "),a("p",[s._v("文档模型提供文档管理的能力，每一个页面即一个文档流，对应一个文档模型。文档模型包含了一组 Node 组成的一颗树，类似于 DOM。我们可以通过文档模型来操作 "),a("code",[s._v("Node")]),s._v(" 树，来达到管理文档模型的能力。每一个文档模型对应多个 "),a("code",[s._v("Node")]),s._v("，但是根 "),a("code",[s._v("Node")]),s._v(" 只有一个，即 "),a("code",[s._v("rootNode")]),s._v(" 和 "),a("code",[s._v("nodes")]),s._v("。")]),s._v(" "),a("p",[s._v("文档模型可以通过 "),a("code",[s._v("Node")]),s._v(" 树，通过 "),a("code",[s._v("doc.schema")]),s._v(" 来导出文档的 "),a("code",[s._v("schema")]),s._v("，并使用其进行渲染。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DocumentModel")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 选区控制\n   */")]),s._v("\n  selection"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Selection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 操作记录控制\n   */")]),s._v("\n  history"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" History"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 模拟器\n   */")]),s._v("\n  simulator"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ISimulatorHost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 是否已修改\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("isModified")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 根节点 类型有：Page/Component/Block\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRootNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RootNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 获取节点\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 根据 schema 创建一个节点\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" NodeSchema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 插入一个节点\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("parent"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" thing"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" at"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" copy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 移除一个节点\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idOrNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" INode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 生成唯一id\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 导出 schema 数据\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSchema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 导出节点 Schema\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getNodeSchema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 根据节点取得视图实例，在循环等场景会有多个，依赖 simulator 的接口\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ViewInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 通过 DOM 节点获取节点，依赖 simulator 的接口\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getNodeFromElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Element "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 获得到的结果是一个数组\n   * 表示一个实例对应多个外层 DOM 节点，依赖 simulator 的接口\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getDOMNodes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("viewInstance"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ViewInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Element "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Text"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 激活当前文档\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("active")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 不激活\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("suspense")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 销毁\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("destroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// =====  事件集合 =====")]),s._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br")])]),a("h3",{attrs:{id:"节点模型-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点模型-node"}},[s._v("#")]),s._v(" 节点模型 - Node")]),s._v(" "),a("p",[s._v("Node 节点模型功能聚焦于单层级的 schema 相关操作 。Node 节点模型核心功能点有三个:")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("Props")]),s._v(" 管理：通过 "),a("code",[s._v("Props")]),s._v(" 实例管理所有的 "),a("code",[s._v("Prop")]),s._v("，包括新增、设置、删除等 "),a("code",[s._v("Prop")]),s._v(" 相关操作。")]),s._v(" "),a("li",[a("code",[s._v("Node")]),s._v(" 管理：管理 "),a("code",[s._v("Node")]),s._v(" 树的关系，修改当前 "),a("code",[s._v("Node")]),s._v(" 节点或者 "),a("code",[s._v("Node")]),s._v(" 子节点等。")]),s._v(" "),a("li",[a("code",[s._v("Schema")]),s._v(" 管理：可以通过 "),a("code",[s._v("Node")]),s._v(" 获取当前层级的 "),a("code",[s._v("Schema")]),s._v(" 描述协议内容，并且也可以修改它。")])]),s._v(" "),a("p",[s._v("通过 "),a("code",[s._v("Node")]),s._v(" 这一层级，对 "),a("code",[s._v("Props")]),s._v("、"),a("code",[s._v("Node")]),s._v(" 树和 "),a("code",[s._v("Schema")]),s._v(" 的管理粒度控制到最低，这样扩展性也就更强。")]),s._v(" "),a("h3",{attrs:{id:"属性模型-prop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性模型-prop"}},[s._v("#")]),s._v(" 属性模型 - Prop")]),s._v(" "),a("p",[s._v("一个 "),a("code",[s._v("Props")]),s._v(" 对应多个 "),a("code",[s._v("Prop")]),s._v("，每一个 "),a("code",[s._v("Prop")]),s._v(" 对应 schema 的 "),a("code",[s._v("props")]),s._v(" 下的一个字段。")]),s._v(" "),a("p",[a("code",[s._v("Props")]),s._v(" 管理的是 "),a("code",[s._v("Node")]),s._v(" 节点模型中的 "),a("code",[s._v("props")]),s._v(" 字段下的内容。而 "),a("code",[s._v("Prop")]),s._v(" 管理的是 "),a("code",[s._v("props")]),s._v(" 下的每一个 "),a("code",[s._v("key")]),s._v(" 的内容，例如下面的示例中，一个 "),a("code",[s._v("Props")]),s._v(" 管理至少 6 个 "),a("code",[s._v("Prop")]),s._v("，而其中一个 "),a("code",[s._v("Prop")]),s._v(" 管理的是 "),a("code",[s._v("showTitle")]),s._v(" 的结果。")]),s._v(" "),a("h3",{attrs:{id:"组件描述模型-componentmeta"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件描述模型-componentmeta"}},[s._v("#")]),s._v(" 组件描述模型 - ComponentMeta")]),s._v(" "),a("p",[s._v("编排已经等价于直接操作节点 & 属性了，而一个节点和一组对应的属性相当于一个真实的组件，而真实的组件一定是有约束的，比如组件名、组件类型、支持哪些属性以及属性类型、组件能否拖动、支持哪些扩展操作、组件是否是容器型组件、A 组件中能否放入 B 组件等等。")]),s._v(" "),a("p",[s._v("于是，我们设计了一份协议专门负责组件描述，即《中后台搭建组件描述协议》，而编排模块中也有负责解析和使用符合描述协议规范的模块。")]),s._v(" "),a("p",[s._v("每一个组件对应一个 "),a("code",[s._v("ComponentMeta")]),s._v(" 的实例，其属性和方法就是描述协议中的所有字段，所有 "),a("code",[s._v("ComponentMeta")]),s._v(" 都由设计器器的 "),a("code",[s._v("designer")]),s._v(" 模块进行创建和管理，其他模块通过 "),a("code",[s._v("designer")]),s._v(" 来获取指定的 "),a("code",[s._v("ComponentMeta")]),s._v(" 实例，尤其是每个 "),a("code",[s._v("Node")]),s._v(" 实例上都会挂载对应的 "),a("code",[s._v("ComponentMeta")]),s._v(" 实例。"),a("strong",[s._v("组件描述模型是后续编排辅助的基础，包括设置面板、拖拽定位机制等")]),s._v("。ComponentMeta 就是低代码物料开发时要做的配置。")]),s._v(" "),a("h3",{attrs:{id:"项目、文档、节点和属性模型关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目、文档、节点和属性模型关系"}},[s._v("#")]),s._v(" 项目、文档、节点和属性模型关系")]),s._v(" "),a("p",[s._v("整体来看，一个 Project 包含若干个 DocumentModel 实例，每个 DocumentModel 包含一组 Node 构成一颗树(类似 DOM 树)，每个 Node 通过 Props 实例管理所有 Prop。整体的关系图如下。节点 & 属性模型等价于 JSON 数据结构，而编排的本质是产出 JSON 数据结构，现在可以重新表述为编排的本质是操作节点 & 属性模型了。")]),s._v(" "),a("p",[s._v("一个 Project 包含若干个 DocumentModel 实例，每个 DocumentModel 包含一组 Node 构成一颗树（类似 DOM），节点树的根节点的 componentName 只能是 Page / Component / Block 之一，每个 Node 通过 Props 实例管理所有 Prop。特别说明几点：")]),s._v(" "),a("ul",[a("li",[s._v("Prop 是递归实现的，也就是说底层 Props 也是一颗属性树；")]),s._v(" "),a("li",[s._v("每个插槽也是一个 Node 实例，关联到所属宿主 Node 的相应 Prop 上；")]),s._v(" "),a("li",[s._v("Node / Prop 在编排过程中，会被频繁操作，一定要注意 Node / Prop 的创建和销毁逻辑的处理，否则会出现 Node / Prop 数越来越多导致内存泄漏；")]),s._v(" "),a("li",[s._v("PropStash 用于获取时（get/query）临时生成 Prop，区别于原本就存在的 Prop，后续会写入到相应位置；")])]),s._v(" "),a("p",[a("strong",[s._v("节点 & 属性模型等价于 JSON 数据结构，而编排的本质是产出 JSON 数据结构，现在可以重新表述为编排的本质是操作节点 & 属性模型了。")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一段编排的示例代码")]),s._v("\nrootNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertAfter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" componentName"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" props"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'medium'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nrootNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertAfter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" componentName"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" props"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'medium'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nrootNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getProp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'size'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'large'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nrootNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nrootNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("export")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 产出 schema")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"画布渲染设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画布渲染设计"}},[s._v("#")]),s._v(" 画布渲染设计")]),s._v(" "),a("p",[s._v("采用设计态和渲染态的双层架构")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/images/architecture/lowcode15.png",alt:"lowcode15"}})]),s._v(" "),a("p",[s._v("设计器和渲染器其实处在不同的 Frame 下，渲染器以单独的 "),a("code",[s._v("iframe")]),s._v(" 嵌入。这样做的好处，一是为了给渲染器一个更纯净的运行环境，更贴近生产环境，二是扩展性考虑，让用户基于接口约束自定义自己的渲染器。")]),s._v(" "),a("p",[a("strong",[s._v("那么，xxx-simulator-renderer 和 xxx-renderer 作用分别是什么？两者之间有何关系？")])]),s._v(" "),a("ul",[a("li",[s._v("xxx-renderer 是一个纯 renderer，即一个渲染器，通过给定输入 schema、依赖组件和配置参数（device / locale 等）之后完成渲染。")]),s._v(" "),a("li",[s._v("xxx-simulator-renderer 通过和 host 进行通信来和设计器打交道，提供了 DocumentModel 获取 schema 和组件，提供的是将设计器传入的 DocumentModel 和组件/库描述转成相应的 schema 和 组件类（实现响应式，后面再介绍），最后将其传入 xxx-renderer 来完成渲染。另外其提供了一些必要的接口，来帮助设计器完成交互，比如点击渲染画布任意一个位置，需要能计算出点击的组件实例，继而找到设计器对应的 Node 实例，以及组件实例的位置/尺寸信息（DOMRect），让设计器完成辅助 UI 的绘制，如节点选中。")])]),s._v(" "),a("h2",{attrs:{id:"通信机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信机制"}},[s._v("#")]),s._v(" 通信机制")]),s._v(" "),a("p",[s._v("既然设计器和渲染器处于两个 Frame，它们之间的事件通信、方法调用是通过各自的代理对象进行的，不允许其他方式，避免代码耦合。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/images/architecture/lowcode16.png",alt:"lowcode16"}})]),s._v(" "),a("h4",{attrs:{id:"host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host"}},[s._v("#")]),s._v(" host")]),s._v(" "),a("p",[s._v("host 可以访问设计器的所有模块，由于 renderer 层不负责与设计器相关的交互。所以增加了一层 host，作为通信的中间层。host 可以访问到设计器中所有模块，并提供相关方法供 simulator-renderer 层调用。例如 schema 的获取、组件获取等。")]),s._v(" "),a("p",[s._v("simulator-renderer 通过调用 host 的方法，将 schema、components 等参数传给 renderer，让 renderer 进行渲染。")]),s._v(" "),a("h4",{attrs:{id:"xxx-simulator-renderer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xxx-simulator-renderer"}},[s._v("#")]),s._v(" xxx-simulator-renderer")]),s._v(" "),a("p",[s._v("为了完成双向交互，simulator-renderer 也需要提供一些方法来供 host 层调用，之后当设计器和用户有交互，例如上述提到的节点选中。这里需要提供的方法有：")]),s._v(" "),a("ul",[a("li",[s._v("getClientRects")]),s._v(" "),a("li",[s._v("getClosestNodeInstance")]),s._v(" "),a("li",[s._v("findDOMNodes")]),s._v(" "),a("li",[s._v("getComponent")]),s._v(" "),a("li",[s._v("setNativeSelection")]),s._v(" "),a("li",[s._v("setDraggingState")]),s._v(" "),a("li",[s._v("setCopyState")]),s._v(" "),a("li",[s._v("clearState")])]),s._v(" "),a("p",[s._v("这样，host 和 simulator-renderer 之间便通过相关方法实现了双向通信，能在隔离设计器的基础上完成设计器到画布和画布到设计器的通信流程。")]),s._v(" "),a("h4",{attrs:{id:"simulator-机制-simulatorhost-通信机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simulator-机制-simulatorhost-通信机制"}},[s._v("#")]),s._v(" simulator 机制(simulatorHost 通信机制)")]),s._v(" "),a("p",[s._v("既然设计器和渲染器处于两个 Frame，它们之间的事件通信、方法调用是通过各自的代理对象进行的，不允许其他方式，避免代码耦合。host 理论上可以访问到设计器中所有模块，但目前 renderer 只会调用 host 的 schema 生成、组件类获取以及若干配置属性。host 和 renderer 构成了引擎的 simulator 机制，所以内部 host 写作 simulatorHost，renderer 写作 simulatorRenderer。")]),s._v(" "),a("h4",{attrs:{id:"simulatorrenderer-渲染加载机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simulatorrenderer-渲染加载机制"}},[s._v("#")]),s._v(" simulatorRenderer(渲染加载机制)")]),s._v(" "),a("p",[s._v("simulatorHost 中将资源分成 4 类，分别是 Environment  / Library / Theme / Runtime，每种类型都支持 url & text。将 4 类资源在 createSimulator 时写入，待到 contentWindow onload 后完成 simulatorRenderer 的初始化。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://lowcode-engine.cn/site/docs/guide/design/editor",target:"_blank",rel:"noopener noreferrer"}},[s._v("编排模块设计"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);