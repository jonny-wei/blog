(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{485:function(s,t,a){"use strict";a.r(t);var n=a(15),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"webpack-模块联邦"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-模块联邦"}},[s._v("#")]),s._v(" Webpack 模块联邦")]),s._v(" "),a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[s._v("#")]),s._v(" 定义")]),s._v(" "),a("p",[a("strong",[s._v("Webpack 模块联邦")]),s._v(" 是 Webpack 5 新引入的一种远程模块动态加载、运行技术。允许运行时把当前构建的应用作为容器应用，异步加载远程模块。MF 允许我们将原本单个巨大应用按我们理想的方式拆分成多个体积更小、职责更内聚的小应用形式，理想情况下各个应用能够实现独立部署、独立开发(不同应用甚至允许使用不同技术栈)、团队自治，从而降低系统与团队协作的复杂度 —— 没错，这正是所谓的微前端架构。虽然国内讨论热度较低，但使用简单，功能强大，非常适用于微前端或代码重构迁移场景。")]),s._v(" "),a("p",[a("strong",[s._v("模块联邦")]),s._v(" 让 Webpack 达到了线上 Runtime 的效果，让代码直接在项目间利用 CDN 直接共享，不再需要本地安装 Npm 包、构建再发布了！我们知道 Webpack 可以通过 DLL 或者 Externals 做代码共享时 Common Chunk，但不同应用和项目间这个任务就变得困难了，我们几乎无法在项目之间做到按需热插拔。模块联邦是 Webpack5 新内置的一个重要功能，可以让跨应用间真正做到模块共享。 它支持直接将一个应用的包应用于另一个应用，同时具备整体应用一起打包的公共依赖抽取能力。")]),s._v(" "),a("h2",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[s._v("#")]),s._v(" 特性")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("模块化")]),s._v("：应用可按需导出若干模块，这些模块最终会被单独打成模块包，功能上有点像 NPM 模块")]),s._v(" "),a("li",[a("strong",[s._v("动态加载")]),s._v("：应用可在运行时基于 HTTP(S) 协议动态加载其它应用暴露的模块，且用法与动态加载普通 NPM 模块一样简单")]),s._v(" "),a("li",[a("strong",[s._v("微前端")]),s._v("：与其它微前端方案不同，MF 的应用之间关系平等，没有主应用/子应用之分，每个应用都能导出/导入任意模块")])]),s._v(" "),a("h2",{attrs:{id:"用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[s._v("#")]),s._v(" 用法")]),s._v(" "),a("ol",[a("li",[s._v("对于模块生成方，需要使用 "),a("code",[s._v("ModuleFederationPlugin")]),s._v(" 插件的 "),a("code",[s._v("expose")]),s._v(" 参数声明需要导出的模块列表，使用 "),a("code",[s._v("filename")]),s._v(" 指定生成的入口文件")]),s._v(" "),a("li",[s._v("对于模块使用方，需要使用 "),a("code",[s._v("ModuleFederationPlugin")]),s._v(" 插件的 "),a("code",[s._v("remotes")]),s._v(" 参数声明需要从哪些地方导入远程模块，代码中使用异步导入语法 "),a("code",[s._v('import("module")')]),s._v(" 引入模块")]),s._v(" "),a("li",[s._v("依赖共享问题。简单用上面的方式会出现依赖被重复打包，造成产物冗余的问题。为此 "),a("code",[s._v("ModuleFederationPlugin")]),s._v(" 提供了 "),a("code",[s._v("shared")]),s._v(" 配置用于声明该应用可被共享的依赖模块。注意：依赖共享对依赖的版本有一定要求，所以 MF 对共享模块做了版本化管理，可以通过 "),a("code",[s._v("shared.[lib].requiredVersion")]),s._v(" 配置项显式声明应用需要的依赖库版本来解决。除此之外，我们还可以通过 "),a("code",[s._v("shared.[lib].shareScope")]),s._v(" 属性更精细地控制依赖的共享范围。"),a("code",[s._v("shareScope")]),s._v(" 在多团队协作时能够切分出多个资源共享空间，降低依赖冲突的概率。")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ModuleFederationPlugin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app1负责模块导出（子应用）")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ModuleFederationPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MF 应用名称")]),s._v("\n      name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"app1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MF 模块入口，可以理解为该应用的资源清单")]),s._v("\n      filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("remoteEntry.js")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义应用导出哪些模块")]),s._v("\n      exposes"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./utils"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/utils"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./foo"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实际项目可以导入路由配置")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// exposes: {")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   "./routes": "./src/routes",')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// },")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可被共享的依赖模块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("     shared"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lodash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app1 编译产物")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n1. main.js 为整个应用的编译结果，此处可忽略；\n2. src_utils_js.js 与 src_foo_js.js 分别为 exposes 声明的模块的编译产物；\n3. remoteEntry.js 是 ModuleFederationPlugin 插件生成的应用入口文件，\n包含模块清单、MF 运行时代码。 \n*/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app2 负责模块导入（主应用）")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 模块使用方也依然使用 ModuleFederationPlugin 插件搭建 MF 环境")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ModuleFederationPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 remotes 属性声明远程模块列表")]),s._v("\n      remotes"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 地址需要指向导出方生成的应用入口文件")]),s._v("\n        RemoteApp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"app1@http://localhost:8081/dist/remoteEntry.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 运行页面可以看到最终只加载了一次 lodash 产物")]),s._v("\n      shared"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lodash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app1 模块在 app-2/src/main.js 中使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" sayHello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RemoteApp/utils"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br")])]),a("h2",{attrs:{id:"mf与微前端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mf与微前端"}},[s._v("#")]),s._v(" MF与微前端")]),s._v(" "),a("p",[s._v("在微前端中：")]),s._v(" "),a("ul",[a("li",[s._v("加载微应用必须预定义接口方法（mounted、unmount 等）来实现微应用的动态挂载和卸载等功能，这意味着每个微应用必须手动实现这些接口方法；")]),s._v(" "),a("li",[s._v("在"),a("a",{attrs:{href:"https://www.lumin.tech/blog/micro-frontends-2-implementation/",target:"_blank",rel:"noopener noreferrer"}},[s._v("《微前端（二）- 实现篇》"),a("OutboundLink")],1),s._v("中，我们了解到微应用在独立开发模式下，通常也是手动调用接口方法，来动态加载视图；")]),s._v(" "),a("li",[s._v("如果我们想要共享某个微应用的模块给其它微应用使用，这并不是轻松地事。这意味着你需要把该模块独立出去，并以合理调用方式被其它微应用远程加载。")]),s._v(" "),a("li",[s._v("微应用的切换通常由路由状态改变来触发的。")])]),s._v(" "),a("p",[s._v("在模块联合中：")]),s._v(" "),a("ul",[a("li",[s._v("上面我们了解了模块联合每个微应用可以是一个容器应用，所以他们之间可以相互依赖及加载；")]),s._v(" "),a("li",[s._v("每个应用允许暴露（exposes）多个接口，其它应用可以在动态远程加载该应用后，直接使用其接口。这解决了上面微前端提到的的模块共享问题；")]),s._v(" "),a("li",[s._v("在模块使用上非常灵活，当你引用一个远程模块时，可以像使用普通的 npm 包一样使用它，当然也允许懒加载模块；")]),s._v(" "),a("li",[s._v("远程模块和路由没有任何关联，加载的契机完全由 host 应用自己灵活决定。")])]),s._v(" "),a("h2",{attrs:{id:"qa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qa"}},[s._v("#")]),s._v(" QA")]),s._v(" "),a("h3",{attrs:{id:"q1-什么是模块联邦"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q1-什么是模块联邦"}},[s._v("#")]),s._v(" Q1. 什么是模块联邦？")]),s._v(" "),a("p",[s._v("Webpack5 模块联邦是一种允许运行时把当前构建的应用作为容器应用，异步加载远程模块的技术。模块联邦让 webpack 达到了线上 runtime 的效果，能够让代码在项目间利用 CDN 直接共享，不再需要本地安装 npm 包，构建再发布。模块联邦可以真正实现跨应用间模块共享，支持将一个应用的包应用于另一个应用，同时具备整体应用一起打包的公共依赖抽取能力。")]),s._v(" "),a("h3",{attrs:{id:"q2-模块联邦解决了什么问题-其意义是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q2-模块联邦解决了什么问题-其意义是什么"}},[s._v("#")]),s._v(" Q2. 模块联邦解决了什么问题，其意义是什么？")]),s._v(" "),a("p",[s._v("模块联邦的功能意义在于如何通过构建工具对应用进行模块划分、模块共享、模块加载。联邦模块主要是用来解决多个应用之间代码共享的问题，可以让我们的更加优雅的实现跨应用的代码共享")]),s._v(" "),a("h3",{attrs:{id:"q3-模块联邦的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q3-模块联邦的原理"}},[s._v("#")]),s._v(" Q3. 模块联邦的原理？")]),s._v(" "),a("p",[s._v("webpack每次打包都会将资源全部包裹在一个立即执行函数里面，这样虽然避免了全局环境的污染，但也使得外部不能访问内部模块。")]),s._v(" "),a("p",[s._v("在这个立即执行函数里面，webpack使用 "),a("strong",[s._v("webpack_modules")]),s._v(" 对象保存所有的模块代码，然后用内部定义的"),a("code",[s._v("__webpack_require__")]),s._v(" 方法从 "),a("strong",[s._v("webpack_modules")]),s._v(" 中加载模块。并且在异步加载和文件拆分两种情况下向全局暴露一个 webpackChunk 数组用于沟通多个 webpack 资源，这个数组通过被webpack重写push方法，会在其他资源向 "),a("code",[s._v("webpackChunk")]),s._v(" 数组中新增内容时同步添加到 "),a("strong",[s._v("webpack_modules")]),s._v(" 中从而实现模块整合。")]),s._v(" "),a("p",[s._v("联邦模块就是基于这个机制，修改了 "),a("strong",[s._v("webpack_require")]),s._v(" 的部分实现，在require的时候从远程加载资源，然后合并到"),a("code",[s._v("__webpack_modules__")]),s._v(" 中。")]),s._v(" "),a("p",[a("code",[s._v("ModuleFederationPlugin")]),s._v(" `主要做了三件事：")]),s._v(" "),a("ul",[a("li",[s._v("如何共享依赖：使用 "),a("strong",[s._v("SharePlugin")])]),s._v(" "),a("li",[s._v("如何公开模块：使用 "),a("strong",[s._v("ContainerPlugin")])]),s._v(" "),a("li",[s._v("如何引用模块：使用 "),a("strong",[s._v("ContainerReferencePlugin")])])]),s._v(" "),a("p",[s._v("ContainerPlugin：该插件为指定的公开模块创建 entry。entry.js 执行后会在 window 上挂一下对象，该对象有两个方法，get 和 init。get方法用来获取模块。init 方法用来初始化容器，它可以提供共享模块。在使用 Remote 的模块时候，通过 init 将自身 shared 写入 Remote 中，再通过 get 获取 Remote 中 expose 的组件，而作为 Remote 时，判断 Host 中是否有可用的共享依赖，若有，则加载 Host 的这部分依赖，若无，则加载自身依赖。")]),s._v(" "),a("p",[a("code",[s._v("ContainerReferencePlugin")]),s._v(" ：该插件将特定的引用添加到作为外部资源（externals）的容器中，并允许从这些容器中导入远程模块。在导入时会调用容器使用者提供的 remote 进行重载。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/images/optimization/webpack/%E6%A8%A1%E5%9D%97%E8%81%94%E9%82%A6%E5%8E%9F%E7%90%86%E5%9B%BE.png",alt:"模块联邦原理图"}})]),s._v(" "),a("p",[s._v("模块联邦中模块的加载流程：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("__.f.consumes")]),s._v(" 执行，对 "),a("code",[s._v("module federation")]),s._v(" 插件配置的 "),a("code",[s._v("share")]),s._v(" 相关包进行版本注册(通常是一些公共基础包，例如 react, react-dom 等)。配置 "),a("code",[s._v("share")]),s._v("，可以减少重复加载基础包。")]),s._v(" "),a("li",[s._v("加载对应的 "),a("code",[s._v("remoteEntry.js")]),s._v(" 文件，根据插件配置的全局变量，获取到 remoteEntry 暴露的数据。")]),s._v(" "),a("li",[s._v("调用 remoteEntry 暴露的 "),a("code",[s._v("init")]),s._v(" 方法，把主应用的公共基础包与 remoteEntry 基础包的版本进行对比，根据 x.y.z 版本号的方式，看双方版本是否适配。如果适配，加载同一份公共基础包，否则，各自加载。")]),s._v(" "),a("li",[s._v("当应用中，有需要用到 "),a("code",[s._v("remoteEntry")]),s._v(" 中的组件，则会调用这一步， "),a("code",[s._v("__.f.remotes")])]),s._v(" "),a("li",[a("code",[s._v("__.f.remotes")]),s._v(" 加载对应远端组件, 调用 "),a("code",[s._v("remoteEntry")]),s._v(" 暴露的 "),a("code",[s._v("get")]),s._v(" 方法，根据组件名称，获取到对应的组件，挂载到 "),a("strong",[s._v("webpack_modules")]),s._v(" 变量下，后续会被 "),a("strong",[s._v("webpack_require")]),s._v(" 方法所使用。")])]),s._v(" "),a("h3",{attrs:{id:"q4-模块联邦与微前端间有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q4-模块联邦与微前端间有什么区别"}},[s._v("#")]),s._v(" Q4. 模块联邦与微前端间有什么区别？")]),s._v(" "),a("p",[s._v("在微前端中：")]),s._v(" "),a("ul",[a("li",[s._v("加载微应用必须预定义接口方法（mounted、unmount 等）来实现微应用的动态挂载和卸载等功能，这意味着每个微应用必须手动实现这些接口方法；")]),s._v(" "),a("li",[s._v("微应用在独立开发模式下，通常也是手动调用接口方法，来动态加载视图；")]),s._v(" "),a("li",[s._v("如果我们想要共享某个微应用的模块给其它微应用使用，这并不是轻松地事。这意味着你需要把该模块独立出去，并以合理调用方式被其它微应用远程加载。")]),s._v(" "),a("li",[s._v("微应用的切换通常由路由状态改变来触发的。")])]),s._v(" "),a("p",[s._v("在模块联合中：")]),s._v(" "),a("ul",[a("li",[s._v("模块联合每个微应用可以是一个容器应用，所以他们之间可以相互依赖及加载；")]),s._v(" "),a("li",[s._v("每个应用允许暴露（exposes）多个接口，其它应用可以在动态远程加载该应用后，直接使用其接口。这解决了上面微前端提到的的模块共享问题；")]),s._v(" "),a("li",[s._v("在模块使用上非常灵活，当你引用一个远程模块时，可以像使用普通的 npm 包一样使用它，当然也允许懒加载模块；")]),s._v(" "),a("li",[s._v("远程模块和路由没有任何关联，加载的契机完全由 host 应用自己灵活决定。")])]),s._v(" "),a("h3",{attrs:{id:"q5-模块联邦与-npm-包、umd代码共享等方式的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q5-模块联邦与-npm-包、umd代码共享等方式的区别"}},[s._v("#")]),s._v(" Q5. 模块联邦与 NPM 包、UMD代码共享等方式的区别？")]),s._v(" "),a("p",[a("strong",[s._v("npm")]),s._v("： 将共享的模块抽离成lib包，发布npm，再项目中安装，打包。依然需要走本地编译。")]),s._v(" "),a("p",[a("strong",[s._v("umd")]),s._v("：真正 Runtime 的方式可能是 UMD 方式共享代码模块，即将模块用 Webpack UMD 模式打包，并输出到其他项目中。但这种技术方案问题也很明显，就是包体积无法达到本地编译时的优化效果，且库之间容易冲突。")]),s._v(" "),a("p",[a("strong",[s._v("微前端")]),s._v("：微前端就是要解决多项目并存问题，多项目并存的最大问题就是模块共享，不能有冲突。微前端还要考虑样式冲突、生命周期管理。")]),s._v(" "),a("p",[a("strong",[s._v("MF")]),s._v("：直接将一个应用的包应用于另一个应用，同时具备整体应用一起打包的公共依赖抽取能力。让应用具备模块化输出能力，其实开辟了一种新的应用形态，即 “中心应用”，这个中心应用用于在线动态分发 Runtime 子模块，并不直接提供给用户使用。")]),s._v(" "),a("h2",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[s._v("#")]),s._v(" 参考文献")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.lumin.tech/articles/webpack-module-federation/#%E5%85%B1%E4%BA%AB%E6%A8%A1%E5%9D%97",target:"_blank",rel:"noopener noreferrer"}},[s._v("Webpack 5 之 模块联合（Module Federation）"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/115403616",target:"_blank",rel:"noopener noreferrer"}},[s._v("精读《Webpack5 新特性 - 模块联邦》"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7119298510247165965",target:"_blank",rel:"noopener noreferrer"}},[s._v("今天来聊聊webpack 5.0 模块联邦 - 掘金"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6961678963680739359#heading-17",target:"_blank",rel:"noopener noreferrer"}},[s._v("利用联邦模块实现跨应用的代码共享 - 掘金"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);